#include "OmcVersion.xcconfig"

// This code sign identity allows running the built binaries on local machine:
CODE_SIGN_IDENTITY = -
DEVELOPMENT_TEAM = 

// Optional xcconfig with code signing settings for distribution by Abracode
#include? "OmcDistribution.xcconfig"


MACOSX_DEPLOYMENT_TARGET = 11.0
SDKROOT = macosx
FRAMEWORK_SEARCH_PATHS = /Library/Frameworks
GCC_VERSION = com.apple.compilers.llvm.clang.1_0
CLANG_CXX_LANGUAGE_STANDARD = c++17

CLANG_ENABLE_OBJC_ARC = YES
CLANG_ENABLE_OBJC_WEAK = YES
CLANG_ENABLE_MODULES = YES

ALWAYS_SEARCH_USER_PATHS = NO
INFOPLIST_PREPROCESS = YES

SYMROOT = ../build

//Obj-C
ENABLE_STRICT_OBJC_MSGSEND = YES
CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR
CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
CLANG_WARN_OBJC_LITERAL_CONVERSION = YES
CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES
GCC_WARN_UNDECLARED_SELECTOR = YES
CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR

//C++
CLANG_WARN_RANGE_LOOP_ANALYSIS = YES
CLANG_WARN_SUSPICIOUS_MOVE = YES

//All languages:

CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES
CLANG_WARN_EMPTY_BODY = YES
CLANG_WARN_BOOL_CONVERSION = YES
CLANG_WARN_CONSTANT_CONVERSION = YES
GCC_WARN_64_TO_32_BIT_CONVERSION = YES
CLANG_WARN_ENUM_CONVERSION = YES
CLANG_WARN_INT_CONVERSION = YES
CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES
CLANG_WARN_INFINITE_RECURSION = YES
GCC_WARN_ABOUT_RETURN_TYPE = YES
CLANG_WARN_STRICT_PROTOTYPES = YES
CLANG_WARN_COMMA = YES
GCC_WARN_UNINITIALIZED_AUTOS = YES
CLANG_WARN_UNREACHABLE_CODE = YES
GCC_WARN_UNUSED_FUNCTION = YES
GCC_WARN_UNUSED_VARIABLE = YES

// this does not seem to work with precompiled headers when building for archiving:
// OTHER_CFLAGS_ARCH[arch=x86_64] = -fcf-protection=full
// OTHER_CFLAGS_ARCH[arch=arm64] = -mbranch-protection=standard

// turn on some compiler security options
OTHER_CFLAGS = ${inherited} -fstack-protector-strong -fPIE ${OTHER_CFLAGS_ARCH}
CLANG_CXX_STANDARD_LIBRARY_HARDENING = fast
